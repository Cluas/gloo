// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo-edge/projects/gloo/api/external/envoy/extensions/http_path/http_path.proto

package http_path

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	v3 "github.com/solo-io/gloo-edge/projects/gloo/pkg/api/external/envoy/config/core/v3"
	_ "github.com/solo-io/gloo-edge/projects/gloo/pkg/api/external/udpa/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Same as HTTP health checker, but allows a custom path per endpoint
// The http path to use can be overriden using endpoint metadata. The endpoint specific path should
// be in the "io.solo.health_checkers.http_path" namespace, under a string value named "path".
type HttpPath struct {
	// Http health check.
	HttpHealthCheck      *v3.HealthCheck_HttpHealthCheck `protobuf:"bytes,1,opt,name=http_health_check,json=httpHealthCheck,proto3" json:"http_health_check,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *HttpPath) Reset()         { *m = HttpPath{} }
func (m *HttpPath) String() string { return proto.CompactTextString(m) }
func (*HttpPath) ProtoMessage()    {}
func (*HttpPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3e6754593cbf954, []int{0}
}
func (m *HttpPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpPath.Unmarshal(m, b)
}
func (m *HttpPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpPath.Marshal(b, m, deterministic)
}
func (m *HttpPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpPath.Merge(m, src)
}
func (m *HttpPath) XXX_Size() int {
	return xxx_messageInfo_HttpPath.Size(m)
}
func (m *HttpPath) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpPath.DiscardUnknown(m)
}

var xxx_messageInfo_HttpPath proto.InternalMessageInfo

func (m *HttpPath) GetHttpHealthCheck() *v3.HealthCheck_HttpHealthCheck {
	if m != nil {
		return m.HttpHealthCheck
	}
	return nil
}

func init() {
	proto.RegisterType((*HttpPath)(nil), "envoy.config.health_checker.http_path.v2.HttpPath")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo-edge/projects/gloo/api/external/envoy/extensions/http_path/http_path.proto", fileDescriptor_e3e6754593cbf954)
}

var fileDescriptor_e3e6754593cbf954 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x31, 0x4e, 0x33, 0x31,
	0x10, 0x85, 0xb5, 0x29, 0xa2, 0x5f, 0xfb, 0x17, 0x40, 0x44, 0x81, 0x22, 0x81, 0x10, 0x0d, 0x69,
	0xe2, 0x11, 0x59, 0x89, 0x03, 0x84, 0x26, 0x65, 0x44, 0x41, 0x81, 0x84, 0x22, 0xaf, 0x63, 0x6c,
	0x93, 0xc5, 0x63, 0xd9, 0xb3, 0xab, 0xa4, 0xe3, 0x38, 0x39, 0x03, 0x27, 0xa0, 0xe5, 0x0a, 0x9c,
	0x04, 0xad, 0x8d, 0xc8, 0xa6, 0x0b, 0xdd, 0xf3, 0xd3, 0xf3, 0xf7, 0x46, 0x33, 0x79, 0xa9, 0x0c,
	0xe9, 0xba, 0x64, 0x02, 0x5f, 0x21, 0x60, 0x85, 0x63, 0x83, 0xa0, 0x2a, 0xc4, 0xb1, 0x5c, 0x2a,
	0x09, 0xce, 0xe3, 0x8b, 0x14, 0x14, 0xa2, 0x05, 0xdc, 0x19, 0x90, 0x6b, 0x92, 0xde, 0xf2, 0x0a,
	0xa4, 0x6d, 0x70, 0x13, 0x9f, 0x36, 0x18, 0xb4, 0x01, 0x34, 0x91, 0x5b, 0x38, 0x4e, 0x7a, 0xa7,
	0x98, 0xf3, 0x48, 0x38, 0x18, 0xc5, 0x2c, 0x13, 0x68, 0x9f, 0x8d, 0x62, 0x5a, 0xf2, 0x8a, 0xf4,
	0x42, 0x68, 0x29, 0x56, 0xd2, 0xb3, 0x5d, 0xb8, 0x99, 0x0c, 0xcf, 0xeb, 0xa5, 0xe3, 0xc0, 0xad,
	0x45, 0xe2, 0x14, 0xa9, 0x81, 0x38, 0xd5, 0x21, 0x81, 0x86, 0xd7, 0xa9, 0x34, 0x81, 0x40, 0xa0,
	0x97, 0xd0, 0x14, 0xd0, 0x05, 0xfe, 0x04, 0x4f, 0x15, 0x2a, 0x8c, 0x12, 0x5a, 0x95, 0xdc, 0x2b,
	0x93, 0xff, 0x9b, 0x11, 0xb9, 0x39, 0x27, 0x3d, 0x78, 0xca, 0x4f, 0x62, 0x73, 0xf7, 0xf3, 0x59,
	0x76, 0x99, 0x8d, 0xfe, 0x4f, 0x6e, 0xd8, 0xde, 0xbc, 0x6d, 0x0d, 0x6b, 0x0a, 0x36, 0x8b, 0xc9,
	0xbb, 0xd8, 0xd2, 0x62, 0x3a, 0xef, 0xfb, 0x23, 0xbd, 0x6f, 0x4c, 0xb7, 0xd9, 0xf6, 0xeb, 0x22,
	0x7b, 0x7f, 0xfb, 0xf8, 0xec, 0xf7, 0x8e, 0x7b, 0xf9, 0xad, 0xc1, 0x04, 0x75, 0x1e, 0xd7, 0x1b,
	0x76, 0xe8, 0x3e, 0xa6, 0xbf, 0xf3, 0xce, 0xb3, 0xc7, 0x87, 0x3f, 0x5c, 0xca, 0xad, 0xd4, 0xa1,
	0xd7, 0x2a, 0xfb, 0x71, 0x39, 0xc5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x71, 0x69, 0x8f,
	0x0a, 0x02, 0x00, 0x00,
}

func (this *HttpPath) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*HttpPath)
	if !ok {
		that2, ok := that.(HttpPath)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.HttpHealthCheck.Equal(that1.HttpHealthCheck) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
