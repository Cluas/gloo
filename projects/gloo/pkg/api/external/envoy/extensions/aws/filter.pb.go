// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo-edge/projects/gloo/api/external/envoy/extensions/aws/filter.proto

package aws

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// AWS Lambda contains the configuration necessary to perform transform regular
// http calls to AWS Lambda invocations.
type AWSLambdaPerRoute struct {
	// The name of the function
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The qualifier of the function (defaults to $LATEST if not specified)
	Qualifier string `protobuf:"bytes,2,opt,name=qualifier,proto3" json:"qualifier,omitempty"`
	// Invocation type - async or regular.
	Async bool `protobuf:"varint,3,opt,name=async,proto3" json:"async,omitempty"`
	// Optional default body if the body is empty. By default on default
	// body is used if the body empty, and an empty body will be sent upstream.
	EmptyBodyOverride    *types.StringValue `protobuf:"bytes,4,opt,name=empty_body_override,json=emptyBodyOverride,proto3" json:"empty_body_override,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AWSLambdaPerRoute) Reset()         { *m = AWSLambdaPerRoute{} }
func (m *AWSLambdaPerRoute) String() string { return proto.CompactTextString(m) }
func (*AWSLambdaPerRoute) ProtoMessage()    {}
func (*AWSLambdaPerRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_64076130e3709c28, []int{0}
}
func (m *AWSLambdaPerRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AWSLambdaPerRoute.Unmarshal(m, b)
}
func (m *AWSLambdaPerRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AWSLambdaPerRoute.Marshal(b, m, deterministic)
}
func (m *AWSLambdaPerRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSLambdaPerRoute.Merge(m, src)
}
func (m *AWSLambdaPerRoute) XXX_Size() int {
	return xxx_messageInfo_AWSLambdaPerRoute.Size(m)
}
func (m *AWSLambdaPerRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSLambdaPerRoute.DiscardUnknown(m)
}

var xxx_messageInfo_AWSLambdaPerRoute proto.InternalMessageInfo

func (m *AWSLambdaPerRoute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AWSLambdaPerRoute) GetQualifier() string {
	if m != nil {
		return m.Qualifier
	}
	return ""
}

func (m *AWSLambdaPerRoute) GetAsync() bool {
	if m != nil {
		return m.Async
	}
	return false
}

func (m *AWSLambdaPerRoute) GetEmptyBodyOverride() *types.StringValue {
	if m != nil {
		return m.EmptyBodyOverride
	}
	return nil
}

type AWSLambdaProtocolExtension struct {
	// The host header for AWS this cluster
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// The region for this cluster
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// The access_key for AWS this cluster
	AccessKey string `protobuf:"bytes,3,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	// The secret_key for AWS this cluster
	SecretKey string `protobuf:"bytes,4,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	// The session_token for AWS this cluster
	SessionToken string `protobuf:"bytes,5,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	// The role_arn to use when generating credentials for the mounted projected SA token
	RoleArn              string   `protobuf:"bytes,6,opt,name=role_arn,json=roleArn,proto3" json:"role_arn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AWSLambdaProtocolExtension) Reset()         { *m = AWSLambdaProtocolExtension{} }
func (m *AWSLambdaProtocolExtension) String() string { return proto.CompactTextString(m) }
func (*AWSLambdaProtocolExtension) ProtoMessage()    {}
func (*AWSLambdaProtocolExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_64076130e3709c28, []int{1}
}
func (m *AWSLambdaProtocolExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AWSLambdaProtocolExtension.Unmarshal(m, b)
}
func (m *AWSLambdaProtocolExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AWSLambdaProtocolExtension.Marshal(b, m, deterministic)
}
func (m *AWSLambdaProtocolExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSLambdaProtocolExtension.Merge(m, src)
}
func (m *AWSLambdaProtocolExtension) XXX_Size() int {
	return xxx_messageInfo_AWSLambdaProtocolExtension.Size(m)
}
func (m *AWSLambdaProtocolExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSLambdaProtocolExtension.DiscardUnknown(m)
}

var xxx_messageInfo_AWSLambdaProtocolExtension proto.InternalMessageInfo

func (m *AWSLambdaProtocolExtension) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *AWSLambdaProtocolExtension) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *AWSLambdaProtocolExtension) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *AWSLambdaProtocolExtension) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *AWSLambdaProtocolExtension) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *AWSLambdaProtocolExtension) GetRoleArn() string {
	if m != nil {
		return m.RoleArn
	}
	return ""
}

type AWSLambdaConfig struct {
	// Types that are valid to be assigned to CredentialsFetcher:
	//	*AWSLambdaConfig_UseDefaultCredentials
	//	*AWSLambdaConfig_ServiceAccountCredentials_
	CredentialsFetcher   isAWSLambdaConfig_CredentialsFetcher `protobuf_oneof:"credentials_fetcher"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *AWSLambdaConfig) Reset()         { *m = AWSLambdaConfig{} }
func (m *AWSLambdaConfig) String() string { return proto.CompactTextString(m) }
func (*AWSLambdaConfig) ProtoMessage()    {}
func (*AWSLambdaConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_64076130e3709c28, []int{2}
}
func (m *AWSLambdaConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AWSLambdaConfig.Unmarshal(m, b)
}
func (m *AWSLambdaConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AWSLambdaConfig.Marshal(b, m, deterministic)
}
func (m *AWSLambdaConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSLambdaConfig.Merge(m, src)
}
func (m *AWSLambdaConfig) XXX_Size() int {
	return xxx_messageInfo_AWSLambdaConfig.Size(m)
}
func (m *AWSLambdaConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSLambdaConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AWSLambdaConfig proto.InternalMessageInfo

type isAWSLambdaConfig_CredentialsFetcher interface {
	isAWSLambdaConfig_CredentialsFetcher()
	Equal(interface{}) bool
}

type AWSLambdaConfig_UseDefaultCredentials struct {
	UseDefaultCredentials *types.BoolValue `protobuf:"bytes,1,opt,name=use_default_credentials,json=useDefaultCredentials,proto3,oneof" json:"use_default_credentials,omitempty"`
}
type AWSLambdaConfig_ServiceAccountCredentials_ struct {
	ServiceAccountCredentials *AWSLambdaConfig_ServiceAccountCredentials `protobuf:"bytes,2,opt,name=service_account_credentials,json=serviceAccountCredentials,proto3,oneof" json:"service_account_credentials,omitempty"`
}

func (*AWSLambdaConfig_UseDefaultCredentials) isAWSLambdaConfig_CredentialsFetcher()      {}
func (*AWSLambdaConfig_ServiceAccountCredentials_) isAWSLambdaConfig_CredentialsFetcher() {}

func (m *AWSLambdaConfig) GetCredentialsFetcher() isAWSLambdaConfig_CredentialsFetcher {
	if m != nil {
		return m.CredentialsFetcher
	}
	return nil
}

func (m *AWSLambdaConfig) GetUseDefaultCredentials() *types.BoolValue {
	if x, ok := m.GetCredentialsFetcher().(*AWSLambdaConfig_UseDefaultCredentials); ok {
		return x.UseDefaultCredentials
	}
	return nil
}

func (m *AWSLambdaConfig) GetServiceAccountCredentials() *AWSLambdaConfig_ServiceAccountCredentials {
	if x, ok := m.GetCredentialsFetcher().(*AWSLambdaConfig_ServiceAccountCredentials_); ok {
		return x.ServiceAccountCredentials
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AWSLambdaConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AWSLambdaConfig_UseDefaultCredentials)(nil),
		(*AWSLambdaConfig_ServiceAccountCredentials_)(nil),
	}
}

// In order to specify the aws sts endpoint, both the cluster and uri must be set.
// This is due to an envoy limitation which cannot infer the host or path from the cluster,
// and therefore must be explicitly specified via the uri
type AWSLambdaConfig_ServiceAccountCredentials struct {
	// The name of the envoy cluster which represents the desired aws sts endpoint
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// The full uri of the aws sts endpoint
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// timeout for the request
	Timeout              *types.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AWSLambdaConfig_ServiceAccountCredentials) Reset() {
	*m = AWSLambdaConfig_ServiceAccountCredentials{}
}
func (m *AWSLambdaConfig_ServiceAccountCredentials) String() string {
	return proto.CompactTextString(m)
}
func (*AWSLambdaConfig_ServiceAccountCredentials) ProtoMessage() {}
func (*AWSLambdaConfig_ServiceAccountCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_64076130e3709c28, []int{2, 0}
}
func (m *AWSLambdaConfig_ServiceAccountCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AWSLambdaConfig_ServiceAccountCredentials.Unmarshal(m, b)
}
func (m *AWSLambdaConfig_ServiceAccountCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AWSLambdaConfig_ServiceAccountCredentials.Marshal(b, m, deterministic)
}
func (m *AWSLambdaConfig_ServiceAccountCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSLambdaConfig_ServiceAccountCredentials.Merge(m, src)
}
func (m *AWSLambdaConfig_ServiceAccountCredentials) XXX_Size() int {
	return xxx_messageInfo_AWSLambdaConfig_ServiceAccountCredentials.Size(m)
}
func (m *AWSLambdaConfig_ServiceAccountCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSLambdaConfig_ServiceAccountCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_AWSLambdaConfig_ServiceAccountCredentials proto.InternalMessageInfo

func (m *AWSLambdaConfig_ServiceAccountCredentials) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *AWSLambdaConfig_ServiceAccountCredentials) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *AWSLambdaConfig_ServiceAccountCredentials) GetTimeout() *types.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func init() {
	proto.RegisterType((*AWSLambdaPerRoute)(nil), "envoy.config.filter.http.aws_lambda.v2.AWSLambdaPerRoute")
	proto.RegisterType((*AWSLambdaProtocolExtension)(nil), "envoy.config.filter.http.aws_lambda.v2.AWSLambdaProtocolExtension")
	proto.RegisterType((*AWSLambdaConfig)(nil), "envoy.config.filter.http.aws_lambda.v2.AWSLambdaConfig")
	proto.RegisterType((*AWSLambdaConfig_ServiceAccountCredentials)(nil), "envoy.config.filter.http.aws_lambda.v2.AWSLambdaConfig.ServiceAccountCredentials")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo-edge/projects/gloo/api/external/envoy/extensions/aws/filter.proto", fileDescriptor_64076130e3709c28)
}

var fileDescriptor_64076130e3709c28 = []byte{
	// 647 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x4e, 0x13, 0x41,
	0x14, 0x66, 0xa1, 0x50, 0x3a, 0xf8, 0x13, 0x16, 0x08, 0x6d, 0x41, 0xac, 0x98, 0x18, 0x6e, 0xd8,
	0x4d, 0x8a, 0x2f, 0xd0, 0x82, 0x09, 0x89, 0x24, 0xe2, 0x42, 0x34, 0x7a, 0xb3, 0x99, 0xce, 0x9e,
	0x6e, 0x47, 0xa6, 0x73, 0xd6, 0x99, 0xd9, 0xb6, 0xfb, 0x12, 0xde, 0xf8, 0x06, 0x26, 0x26, 0x5e,
	0x7b, 0xe5, 0xa3, 0x78, 0xed, 0x3b, 0x78, 0xe3, 0x95, 0xd9, 0xd9, 0xad, 0x45, 0x08, 0x11, 0xef,
	0x66, 0xbe, 0xef, 0x7c, 0x67, 0xbf, 0xf3, 0xb3, 0x43, 0xde, 0xc4, 0xdc, 0x0c, 0xd2, 0x9e, 0xc7,
	0x70, 0xe8, 0x6b, 0x14, 0xb8, 0xcf, 0xd1, 0x8f, 0x05, 0xe2, 0x3e, 0x44, 0x31, 0xf8, 0x89, 0xc2,
	0x77, 0xc0, 0x8c, 0xb6, 0x90, 0x4f, 0x13, 0xee, 0xc3, 0xc4, 0x80, 0x92, 0x54, 0xf8, 0x20, 0x47,
	0x98, 0xd9, 0xab, 0xd4, 0x1c, 0xa5, 0xf6, 0xe9, 0x58, 0xfb, 0x7d, 0x2e, 0x0c, 0x28, 0x2f, 0x51,
	0x68, 0xd0, 0x7d, 0x62, 0x43, 0x3c, 0x86, 0xb2, 0xcf, 0x63, 0xaf, 0xa4, 0x06, 0xc6, 0x24, 0x1e,
	0x1d, 0xeb, 0x50, 0xd0, 0x61, 0x2f, 0xa2, 0xde, 0xa8, 0xdd, 0x5c, 0x8f, 0x31, 0x46, 0x2b, 0xf1,
	0xf3, 0x53, 0xa1, 0x6e, 0xba, 0x30, 0x31, 0x05, 0x08, 0x13, 0x53, 0x62, 0x3b, 0x31, 0x62, 0x2c,
	0xac, 0x2d, 0x83, 0xbd, 0xb4, 0xef, 0x8f, 0x15, 0x4d, 0x12, 0x50, 0xfa, 0x26, 0x3e, 0x4a, 0x15,
	0x35, 0x1c, 0x65, 0xc9, 0x6f, 0x8e, 0xa8, 0xe0, 0x11, 0x35, 0xe0, 0x4f, 0x0f, 0x05, 0xb1, 0xfb,
	0xd5, 0x21, 0xab, 0x9d, 0xd7, 0x67, 0x27, 0xd6, 0xd3, 0x29, 0xa8, 0x00, 0x53, 0x03, 0xee, 0x16,
	0xa9, 0x48, 0x3a, 0x84, 0xba, 0xd3, 0x72, 0xf6, 0x6a, 0xdd, 0xea, 0xaf, 0x6e, 0x45, 0xcd, 0xb7,
	0x9c, 0xc0, 0x82, 0xee, 0x36, 0xa9, 0xbd, 0x4f, 0xa9, 0xe0, 0x7d, 0x0e, 0xaa, 0x3e, 0x9f, 0x47,
	0x04, 0x33, 0xc0, 0x5d, 0x27, 0x8b, 0x54, 0x67, 0x92, 0xd5, 0x17, 0x5a, 0xce, 0xde, 0x72, 0x50,
	0x5c, 0xdc, 0x13, 0xb2, 0x06, 0xc3, 0xc4, 0x64, 0x61, 0x0f, 0xa3, 0x2c, 0xc4, 0x11, 0x28, 0xc5,
	0x23, 0xa8, 0x57, 0x5a, 0xce, 0xde, 0x4a, 0x7b, 0xdb, 0x2b, 0xdc, 0x7b, 0x53, 0xf7, 0xde, 0x99,
	0x51, 0x5c, 0xc6, 0xaf, 0xa8, 0x48, 0x21, 0x58, 0xb5, 0xc2, 0x2e, 0x46, 0xd9, 0x8b, 0x52, 0xb6,
	0xfb, 0xdd, 0x21, 0xcd, 0x99, 0xe9, 0x5c, 0xc4, 0x50, 0x3c, 0x9b, 0x0e, 0x24, 0x77, 0x3f, 0x40,
	0x6d, 0xae, 0xb9, 0xcf, 0x41, 0xf7, 0x21, 0x59, 0x52, 0x10, 0x73, 0x94, 0x85, 0xf5, 0x19, 0x5d,
	0xc2, 0xee, 0x03, 0x42, 0x28, 0x63, 0xa0, 0x75, 0x78, 0x01, 0x99, 0xad, 0xa2, 0x16, 0xd4, 0x0a,
	0xe4, 0x39, 0x64, 0x39, 0xad, 0x81, 0x29, 0x30, 0x96, 0xae, 0x14, 0x74, 0x81, 0xe4, 0xf4, 0x63,
	0x72, 0x57, 0x83, 0xce, 0x6d, 0x84, 0x06, 0x2f, 0x40, 0xd6, 0x17, 0x6d, 0xc4, 0x9d, 0x12, 0x3c,
	0xcf, 0x31, 0xb7, 0x41, 0x96, 0x15, 0x0a, 0x08, 0xa9, 0x92, 0xf5, 0x25, 0xcb, 0x57, 0xf3, 0x7b,
	0x47, 0xc9, 0xdd, 0xcf, 0x0b, 0xe4, 0xfe, 0x9f, 0xd2, 0x0e, 0xed, 0x02, 0xb9, 0xe7, 0x64, 0x33,
	0xd5, 0x10, 0x46, 0xd0, 0xa7, 0xa9, 0x30, 0x21, 0x53, 0x10, 0x81, 0x34, 0x9c, 0x0a, 0x6d, 0x4b,
	0x5c, 0x69, 0x37, 0xaf, 0x35, 0xb0, 0x8b, 0x28, 0x6c, 0xfb, 0x8e, 0xe7, 0x82, 0x8d, 0x54, 0xc3,
	0x51, 0xa1, 0x3d, 0x9c, 0x49, 0xdd, 0x8f, 0x0e, 0xd9, 0xd2, 0xa0, 0x46, 0x9c, 0x41, 0x48, 0x19,
	0xc3, 0x54, 0xfe, 0x9d, 0x7a, 0xde, 0xa6, 0x7e, 0xe9, 0xdd, 0x6e, 0x97, 0xbd, 0x2b, 0xa6, 0xbd,
	0xb3, 0x22, 0x75, 0xa7, 0xc8, 0x7c, 0xe9, 0xc3, 0xc7, 0x73, 0x41, 0x43, 0xdf, 0x44, 0x36, 0x3f,
	0x38, 0xa4, 0x71, 0xa3, 0xd4, 0x7d, 0x44, 0xaa, 0x4c, 0xa4, 0xda, 0x80, 0xba, 0x3a, 0xdc, 0x29,
	0xee, 0x36, 0xc8, 0x42, 0xaa, 0xf8, 0xd5, 0xe1, 0xe6, 0x98, 0x7b, 0x40, 0xaa, 0x86, 0x0f, 0x01,
	0x53, 0x63, 0xc7, 0xba, 0xd2, 0x6e, 0x5c, 0xeb, 0xdb, 0x51, 0xf9, 0xdb, 0x04, 0xd3, 0xc8, 0xee,
	0x06, 0x59, 0xbb, 0xd4, 0x95, 0xb0, 0x0f, 0x86, 0x0d, 0x40, 0x75, 0x3f, 0x39, 0xdf, 0x7e, 0x56,
	0x9c, 0x2f, 0x3f, 0x76, 0x1c, 0xf2, 0x94, 0x63, 0xd1, 0xa4, 0x44, 0xe1, 0x24, 0xbb, 0x65, 0xbf,
	0xba, 0xf7, 0x3a, 0x63, 0x7d, 0x69, 0x81, 0x4f, 0x9d, 0xb7, 0xa7, 0xff, 0xf1, 0x20, 0x25, 0x17,
	0xf1, 0xbf, 0x1f, 0xa5, 0xde, 0x92, 0xad, 0xeb, 0xe0, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a,
	0x8b, 0x6f, 0xdb, 0xeb, 0x04, 0x00, 0x00,
}

func (this *AWSLambdaPerRoute) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSLambdaPerRoute)
	if !ok {
		that2, ok := that.(AWSLambdaPerRoute)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Qualifier != that1.Qualifier {
		return false
	}
	if this.Async != that1.Async {
		return false
	}
	if !this.EmptyBodyOverride.Equal(that1.EmptyBodyOverride) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *AWSLambdaProtocolExtension) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSLambdaProtocolExtension)
	if !ok {
		that2, ok := that.(AWSLambdaProtocolExtension)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Host != that1.Host {
		return false
	}
	if this.Region != that1.Region {
		return false
	}
	if this.AccessKey != that1.AccessKey {
		return false
	}
	if this.SecretKey != that1.SecretKey {
		return false
	}
	if this.SessionToken != that1.SessionToken {
		return false
	}
	if this.RoleArn != that1.RoleArn {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *AWSLambdaConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSLambdaConfig)
	if !ok {
		that2, ok := that.(AWSLambdaConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.CredentialsFetcher == nil {
		if this.CredentialsFetcher != nil {
			return false
		}
	} else if this.CredentialsFetcher == nil {
		return false
	} else if !this.CredentialsFetcher.Equal(that1.CredentialsFetcher) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *AWSLambdaConfig_UseDefaultCredentials) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSLambdaConfig_UseDefaultCredentials)
	if !ok {
		that2, ok := that.(AWSLambdaConfig_UseDefaultCredentials)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultCredentials.Equal(that1.UseDefaultCredentials) {
		return false
	}
	return true
}
func (this *AWSLambdaConfig_ServiceAccountCredentials_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSLambdaConfig_ServiceAccountCredentials_)
	if !ok {
		that2, ok := that.(AWSLambdaConfig_ServiceAccountCredentials_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ServiceAccountCredentials.Equal(that1.ServiceAccountCredentials) {
		return false
	}
	return true
}
func (this *AWSLambdaConfig_ServiceAccountCredentials) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSLambdaConfig_ServiceAccountCredentials)
	if !ok {
		that2, ok := that.(AWSLambdaConfig_ServiceAccountCredentials)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Cluster != that1.Cluster {
		return false
	}
	if this.Uri != that1.Uri {
		return false
	}
	if !this.Timeout.Equal(that1.Timeout) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
