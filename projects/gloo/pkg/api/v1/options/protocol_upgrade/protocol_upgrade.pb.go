// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo-edge/projects/gloo/api/v1/options/protocol_upgrade/protocol_upgrade.proto

package protocol_upgrade

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ProtocolUpgradeConfig struct {
	// Types that are valid to be assigned to UpgradeType:
	//	*ProtocolUpgradeConfig_Websocket
	UpgradeType          isProtocolUpgradeConfig_UpgradeType `protobuf_oneof:"upgrade_type"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ProtocolUpgradeConfig) Reset()         { *m = ProtocolUpgradeConfig{} }
func (m *ProtocolUpgradeConfig) String() string { return proto.CompactTextString(m) }
func (*ProtocolUpgradeConfig) ProtoMessage()    {}
func (*ProtocolUpgradeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac71aaafe4bedf6c, []int{0}
}
func (m *ProtocolUpgradeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolUpgradeConfig.Unmarshal(m, b)
}
func (m *ProtocolUpgradeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolUpgradeConfig.Marshal(b, m, deterministic)
}
func (m *ProtocolUpgradeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolUpgradeConfig.Merge(m, src)
}
func (m *ProtocolUpgradeConfig) XXX_Size() int {
	return xxx_messageInfo_ProtocolUpgradeConfig.Size(m)
}
func (m *ProtocolUpgradeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolUpgradeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolUpgradeConfig proto.InternalMessageInfo

type isProtocolUpgradeConfig_UpgradeType interface {
	isProtocolUpgradeConfig_UpgradeType()
	Equal(interface{}) bool
}

type ProtocolUpgradeConfig_Websocket struct {
	Websocket *ProtocolUpgradeConfig_ProtocolUpgradeSpec `protobuf:"bytes,1,opt,name=websocket,proto3,oneof" json:"websocket,omitempty"`
}

func (*ProtocolUpgradeConfig_Websocket) isProtocolUpgradeConfig_UpgradeType() {}

func (m *ProtocolUpgradeConfig) GetUpgradeType() isProtocolUpgradeConfig_UpgradeType {
	if m != nil {
		return m.UpgradeType
	}
	return nil
}

func (m *ProtocolUpgradeConfig) GetWebsocket() *ProtocolUpgradeConfig_ProtocolUpgradeSpec {
	if x, ok := m.GetUpgradeType().(*ProtocolUpgradeConfig_Websocket); ok {
		return x.Websocket
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ProtocolUpgradeConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ProtocolUpgradeConfig_Websocket)(nil),
	}
}

type ProtocolUpgradeConfig_ProtocolUpgradeSpec struct {
	// Whether the upgrade should be enabled. If left unset, Envoy will enable the protocol upgrade.
	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProtocolUpgradeConfig_ProtocolUpgradeSpec) Reset() {
	*m = ProtocolUpgradeConfig_ProtocolUpgradeSpec{}
}
func (m *ProtocolUpgradeConfig_ProtocolUpgradeSpec) String() string {
	return proto.CompactTextString(m)
}
func (*ProtocolUpgradeConfig_ProtocolUpgradeSpec) ProtoMessage() {}
func (*ProtocolUpgradeConfig_ProtocolUpgradeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac71aaafe4bedf6c, []int{0, 0}
}
func (m *ProtocolUpgradeConfig_ProtocolUpgradeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolUpgradeConfig_ProtocolUpgradeSpec.Unmarshal(m, b)
}
func (m *ProtocolUpgradeConfig_ProtocolUpgradeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolUpgradeConfig_ProtocolUpgradeSpec.Marshal(b, m, deterministic)
}
func (m *ProtocolUpgradeConfig_ProtocolUpgradeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolUpgradeConfig_ProtocolUpgradeSpec.Merge(m, src)
}
func (m *ProtocolUpgradeConfig_ProtocolUpgradeSpec) XXX_Size() int {
	return xxx_messageInfo_ProtocolUpgradeConfig_ProtocolUpgradeSpec.Size(m)
}
func (m *ProtocolUpgradeConfig_ProtocolUpgradeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolUpgradeConfig_ProtocolUpgradeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolUpgradeConfig_ProtocolUpgradeSpec proto.InternalMessageInfo

func (m *ProtocolUpgradeConfig_ProtocolUpgradeSpec) GetEnabled() *types.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtocolUpgradeConfig)(nil), "protocol_upgrade.options.gloo.solo.io.ProtocolUpgradeConfig")
	proto.RegisterType((*ProtocolUpgradeConfig_ProtocolUpgradeSpec)(nil), "protocol_upgrade.options.gloo.solo.io.ProtocolUpgradeConfig.ProtocolUpgradeSpec")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo-edge/projects/gloo/api/v1/options/protocol_upgrade/protocol_upgrade.proto", fileDescriptor_ac71aaafe4bedf6c)
}

var fileDescriptor_ac71aaafe4bedf6c = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcf, 0x4a, 0xf4, 0x30,
	0x14, 0xc5, 0xbf, 0xc2, 0x87, 0x62, 0x14, 0x17, 0x55, 0x41, 0xba, 0x18, 0x44, 0x10, 0xdc, 0x4c,
	0x82, 0x7f, 0x9e, 0xa0, 0x6e, 0x04, 0x41, 0x86, 0x11, 0x45, 0xdc, 0x0c, 0x69, 0x7b, 0x27, 0xc6,
	0x89, 0x3d, 0xa1, 0x4d, 0x9d, 0xf1, 0x8d, 0x7c, 0x04, 0x9f, 0xc7, 0x85, 0x6f, 0xe0, 0x5e, 0xda,
	0x64, 0x10, 0x9c, 0x01, 0x75, 0x17, 0x7e, 0xb9, 0xfc, 0xce, 0xb9, 0x5c, 0x26, 0x95, 0x76, 0xf7,
	0x4d, 0xc6, 0x73, 0x3c, 0x8a, 0x1a, 0x06, 0x7d, 0x0d, 0xa1, 0x0c, 0xd0, 0xa7, 0x42, 0x91, 0xb0,
	0x15, 0x1e, 0x28, 0x77, 0x75, 0x87, 0x84, 0xb4, 0x5a, 0x3c, 0x1d, 0x09, 0x58, 0xa7, 0x51, 0xd6,
	0xed, 0xa7, 0x43, 0x0e, 0x33, 0x6a, 0xac, 0xaa, 0x64, 0x41, 0x0b, 0x80, 0x77, 0x20, 0x3e, 0x58,
	0xe0, 0xc1, 0xc0, 0x5b, 0x2b, 0x6f, 0x53, 0xb9, 0x46, 0xd2, 0x53, 0x80, 0x32, 0xc1, 0x92, 0x35,
	0x63, 0x31, 0xad, 0xa4, 0xb5, 0x54, 0xd5, 0x5e, 0x93, 0x6c, 0x2b, 0x28, 0x74, 0x4f, 0xd1, 0xbe,
	0x02, 0x8d, 0x69, 0xe6, 0x3c, 0xa4, 0x99, 0xf3, 0x6c, 0xff, 0x3d, 0x62, 0x3b, 0x83, 0x90, 0x79,
	0xed, 0x23, 0xcf, 0x50, 0x8e, 0xb5, 0x8a, 0x2d, 0x5b, 0x9b, 0x52, 0x56, 0x23, 0x9f, 0x90, 0xdb,
	0x8d, 0xf6, 0xa2, 0xc3, 0xf5, 0xe3, 0x01, 0xff, 0x55, 0x3d, 0xbe, 0x54, 0xf8, 0x9d, 0x5e, 0x59,
	0xca, 0xcf, 0xff, 0x0d, 0xbf, 0x42, 0x92, 0x0b, 0xb6, 0xb5, 0x64, 0x26, 0x3e, 0x65, 0xab, 0x54,
	0xca, 0xcc, 0x50, 0x11, 0x6a, 0x24, 0xdc, 0xaf, 0xcf, 0xe7, 0xeb, 0xf3, 0x14, 0x30, 0x37, 0xd2,
	0x34, 0x34, 0x9c, 0x8f, 0xa6, 0x9b, 0x6c, 0x23, 0x74, 0x1c, 0xb9, 0x67, 0x4b, 0xe9, 0xed, 0xeb,
	0xc7, 0xff, 0xe8, 0xe5, 0xad, 0x17, 0xdd, 0x5d, 0xfe, 0xe1, 0x8c, 0x76, 0xa2, 0x7e, 0x3a, 0x65,
	0xb6, 0xd2, 0x91, 0x93, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xfb, 0x91, 0xf5, 0x1f, 0x02,
	0x00, 0x00,
}

func (this *ProtocolUpgradeConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtocolUpgradeConfig)
	if !ok {
		that2, ok := that.(ProtocolUpgradeConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.UpgradeType == nil {
		if this.UpgradeType != nil {
			return false
		}
	} else if this.UpgradeType == nil {
		return false
	} else if !this.UpgradeType.Equal(that1.UpgradeType) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtocolUpgradeConfig_Websocket) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtocolUpgradeConfig_Websocket)
	if !ok {
		that2, ok := that.(ProtocolUpgradeConfig_Websocket)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Websocket.Equal(that1.Websocket) {
		return false
	}
	return true
}
func (this *ProtocolUpgradeConfig_ProtocolUpgradeSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtocolUpgradeConfig_ProtocolUpgradeSpec)
	if !ok {
		that2, ok := that.(ProtocolUpgradeConfig_ProtocolUpgradeSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Enabled.Equal(that1.Enabled) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
